strategy:
  matrix:
    canary:
      UPGRADE: true
      PUBLISH_APP: false
      VERSION_NAME: artificialChat@canary
    latest:
      UPGRADE: true
      PUBLISH_APP: false
      VERSION_NAME: artificialChat@latest
    preview:
      UPGRADE: true
      PUBLISH_APP: false
      VERSION_NAME: artificialChat@preview

variables:
  - group: artificialChat_Variables
  - name: BuildLogDirectory
    value: $(Build.BinariesDirectory)\x64\BuildLogs

pool:
  name: rnw-pool-4
  demands: ImageOverride -equals rnw-img-vs2022

steps:
  - checkout: self
    clean: false

  - task: NuGetToolInstaller@0
    inputs:
      versionSpec: '>=5.8.0'

  - task: NodeTool@0
    displayName: Installing Node
    inputs:
      versionSpec: '18.x'

  - task: CmdLine@2
    displayName: Upgrade react-native-windows Version
    condition: eq(variables['UPGRADE'], 'true')
    inputs:
      script: node scripts/use-upgrade-version.js --upgradeVersion $(VERSION_NAME)

  - task: CmdLine@2
    displayName: Installing Yarn
    inputs:
      script: npm install -g yarn

  - task: NuGetCommand@2
    displayName: NuGet restore
    inputs:
      command: restore
      restoreSolution: windows/artificialChat.sln
      verbosityRestore: Detailed

  - task: CmdLine@2
    displayName: midgard-yarn (faster yarn install)
    inputs:
      script: npx midgard-yarn@1.23.14 --pure-lockfile

  - task: CmdLine@2
    displayName: Lint and Type Checks
    inputs:
      script: yarn tsc | yarn lint

  - task: DownloadSecureFile@1
    name: signingCert
    displayName: 'Download CA certificate'
    inputs:
      secureFile: 'artificialChat_Key.pfx'

  - task: CopyFiles@2
    displayName: 'Copy Certificate to Windows Build Directory'
    inputs:
      SourceFolder: '$(signingCert.secureFilePath)'
      Contents: 'artificialChat_Key.pfx'
      TargetFolder: '.\windows\artificialChat\'

  - task: CmdLine@2
    displayName: Build project (Release)
    timeoutInMinutes: 60
    inputs:
      script: npx --no-install react-native run-windows --arch x64 --no-deploy --logging --buildLogDirectory $BuildLogDirectory\Release --msbuildprops PackageCertificateKeyFile=$(signingCert.secureFilePath) --release

  - task: CmdLine@2
    displayName: Remove the Pfx
    inputs:
      script: del /f .\windows\artificialChat\artificialChat_Key.pfx

  - task: PublishBuildArtifacts@1
    displayName: Upload App
    condition: and(succeededOrFailed(), eq(${{ matrix.reactNativeWindowsVersion }}, "current"))
    inputs:
      pathtoPublish: .\windows\AppPackages\artificialChat
      artifactName: 'artificialChat - $(Agent.JobName)-$(System.JobAttempt)'